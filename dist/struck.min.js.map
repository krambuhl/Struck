{"version":3,"file":"struck.min.js","sources":["_export.js","utilities.js","hook.js","extend.js","base-object.js","event-object.js","intercom.js","_after.js"],"names":[],"mappings":"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","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['lodash', 'jquery', 'exports'], function(_, $, exports) {\n      root.Struck = factory(root, exports, _, $);\n    });\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('lodash'), $ = require('jquery');\n    exports = factory(root, exports, _, $);\n  } else {\n    root.Struck = factory(root, {}, root._, root.jQuery);\n  }\n}(this, function(root, Struck, _, $) {\n","// ###Utilities\n\nfunction capitalize(string) {\n\treturn string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// #####splitName\n// split \"event1 event2\" into an\n// array of event names\nfunction splitName(context, names) {\t\n\t// get result of name if defined as a function\n\tvar result = _.isFunction(names) ? names.call(context) : names;\n\n\t// split by spaces if result isn't an array\n\t// always returns an array\n\treturn _.isArray(result) ? result : result.split(\" \");\n}\n\n// #####result\n// returns get result of an expression\nfunction result(expr) {\n\treturn _.isFunction(expr) ? expr() : expr;\n}\n\nfunction firstDef() {\n\treturn _.find(arguments, function(arg) { \n\t\treturn !_.isUndefined(arg);\n\t});\n}","// ##Hook\n\n// wraps function calls with hook logic,\n// used to wrap method calls in an Struck\n// Object.  The object's hook function will be\n// called before and after the function call\n// by default \n\n// __Example:__\n// ```javascript\n// var HookedObj = Struck.EventObject.extend({\n//   initialize: function () {\n//\n//     this.com.on('beforeSayHello', function() {\n//       console.log('open mouth');\n//     });\n//   },\n//\n//   sayHello: Struck.Hook(function () {\n//     console.log('say hello');\n//   })\n// })\n//\n// var myHookedObject = HookedObj.create({\n//   onSayHello: function() {\n///    console.log('hello complete);\n//   },\n//   afterSayHello: function () {\n//     console.log('close mouth');\n//   }\n// });\n//\n// myHookedObject.sayHello();\n//\n// output:\n//   - open mouth\n//   - say hello\n//   - hello complete\n//   - close mouth\n// ```\n\nStruck.Hook = (function () {\n  var defaults = {\n    prefix: 'on',\n    pre: 'before',\n    post: 'after',\n    method: 'hook'\n  };\n\n  function fire(self, method, hname, prefix) {\n    if (self[method]) {\n      self[method].call(self, hname, prefix);\n    }\n  }\n\n  function Hook(name, func, opts) {\n    var options = _.extend({}, defaults, !_.isFunction(func) ? func : opts);\n\n    // define function to called as a method of\n    // Struck Object, the `this` context is assumed\n    // to refer to the struck object.\n    return function() {\n      var result;\n\n      if (options.pre) {\n        fire(this, options.method, name, options.pre);\n      }\n\n      if (_.isFunction(func)) {\n        result = func.apply(this, arguments);\n      }\n\n      fire(this, options.method, name, options.prefix);\n\n      if (options.post) {\n        _.defer(fire, this, options.method, name, options.post);\n      }\n\n      return result;\n    };\n  }\n\n  return Hook;\n})();\n","// ###Extend\n\n// _Pulled from Backbone.js 1.1.2 source_\n//\n// Helper function to correctly set up the prototype chain,\n// for subclasses. Similar to goog.inherits, but uses a hash\n// of prototype properties and class properties to be extended.\n\nStruck.extend = function(protoProps, staticProps) {\n  var parent = this;\n  var child;\n\n  // The constructor function for the new subclass is either defined\n  // by you (the \"constructor\" property in your extend definition),\n  // or defaulted by us to simply call the parent’s constructor.\n  if (protoProps && _.has(protoProps, 'constructor')) {\n    child = protoProps.constructor;\n  } else {\n    child = function() { return parent.apply(this, arguments); };\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  _.extend(child, parent, staticProps);\n\n  // Set the prototype chain to inherit from parent,\n  // without calling parent‘s constructor function.\n  var Surrogate = function() { this.constructor = child; };\n  Surrogate.prototype = parent.prototype;\n  child.prototype = new Surrogate();\n\n  // Add prototype properties (instance properties)\n  // to the subclass, if supplied.\n  if (protoProps) {\n    _.extend(child.prototype, protoProps);\n  }\n\n  // Set a convenience property in case the\n  // parent's prototype is needed later.\n  child.__super__ = parent.prototype;\n\n  return child;\n};\n","// ##BaseObject\n\n// function for enabling common architectures\nStruck.BaseObject = (function () {\n\n\t// ####BaseObject Constructor\n\n\t// constructor is run when object is created\n\t// runs base initiation by default\n\n\t// __Warning: overwriting the BaseObject\n\t// Constructor will disable internal processes.__\n\t// In cases where overwriting the constructor\n\t// is required call the prototype to preserve\n\t// functionality:\n\n\t// `Struck.BaseObject.prototype.constructor.apply(this, arguments);`\n\n\tfunction BaseObject(options) {\n\t\t// run base initiation and provide\n\t\t// hooks that extended objects can use\n\t\tthis.baseInitiation(options);\n\t\tthis.initialize();\n\t}\n\n\t// #####initialize\n\t// overwritable function that gets called\n\t// when constructing new objects\n\tBaseObject.prototype.initialize = Struck.Hook('initialize', _.noop);\n\n\t// #####baseInitiation\n\t// when the object is created\n\tBaseObject.prototype.baseInitiation = Struck.Hook('baseInitiation', function(options) {\n\t\t// assign UID to view object\n\t\tthis.uid = _.uniqueId('uid');\n\n\t\t// add options object to instance\n\t\tthis.options = _.extend({}, options);\n\t});\n\n\t// #####destroy\n\t// overwritable function that gets called\n\t// when destroying object\n\tBaseObject.prototype.destroy = Struck.Hook('destroy', _.noop);\n\n\t// #####hook\n\t// interface for providing method callbacks\n\t// like `onRender`\n\tBaseObject.prototype.hook = function(name, mod) {\n\t\tvar args = _.rest(arguments, 2),\n\t\t\tprefix = firstDef(mod, 'on'),\n\t\t\tmethodHook = prefix + capitalize(name);\n\n\t\tif (this[methodHook]) {\n\t\t\treturn this[methodHook].apply(this, args);\n\t\t}\n\t};\n\n\tfunction reduceProps(self, props) {\n\t\treturn _.reduce(props, function(memo, prop) {\n\t\t\tmemo[prop] = self.get(prop);\n\t\t\treturn memo;\n\t\t}, {});\n\t}\n\n\t// #####get\n\tBaseObject.prototype.get = Struck.Hook('get', function(prop) {\n\t\tvar args = _.toArray(arguments);\n\t\tif (_.isArray(prop)) {\n\t\t\treturn reduceProps(this, prop);\n\t\t} else if (args.length > 1) {\n\t\t\treturn reduceProps(this, args);\n\t\t}\n\t\treturn this[prop];\n\t});\n\n\t// #####set\n\tBaseObject.prototype.set = Struck.Hook('set', function(prop, val) {\n\t\tprop = result(prop);\n\t\tif (_.isObject(prop)) {\n\t\t\t_.each(prop, function(value, property) {\n\t\t\t\tthis.set(property, value);\n\t\t\t}, this);\n\t\t}\n\t\tthis[prop] = result(val);\n\t});\n\n\tBaseObject.extend = Struck.extend;\n\n\t// ###create\n\t// prefered method of creating new objects\n\t// over using the `new` style\n\tBaseObject.create = function(props, opts) {\n\t\tvar Creator = this.extend(props);\n\t\treturn new Creator(_.extend({}, props, opts));\n\t};\n\n\n\treturn BaseObject;\n})();\n","// ##EventObject\n\n// `Struck.EventObject` normalizes an event API\n// for adding event listeners and listening to\n// objects externally.  Using the listen methods\n// automates undelgating events of view removal.\nStruck.EventObject = (function () {\n\t'use strict';\n\n\tvar EventObject = Struck.BaseObject.extend({\n\t\tbaseInitiation: function () {\n\t\t\t// all event objects need an intercom for\n\t\t\t// emiting and listening to events\n\t\t\tthis.com = Struck.Intercom.create();\n\n\t\t\t// call super after defining com which\n\t\t\t// is used for base hooks\n\t\t\tStruck.BaseObject.prototype.baseInitiation.apply(this, arguments);\n\n\t\t\tthis._events = [];\n\t\t}\n\t});\n\n\t// #####hook\n\n\t// trigger intercom events for hook\n\tEventObject.prototype.hook = function (name, mod) {\n\t\tvar postfix = mod !== undefined && mod !== 'on' ? ':' + mod : '';\n\t\tStruck.BaseObject.prototype.hook.apply(this, arguments);\n\t\tthis.com.emit(name + postfix, arguments);\n\t};\n\n\n\tfunction getEvents(events) {\n\t\tevents = result(events);\n\t\tif (events && !_.isArray(events)) {\n\t\t\tevents = events.split(' ');\n\t\t}\n\n\t\treturn events;\n\t}\n\n\n\tfunction addListener(self, opts) {\n\t\tvar obj = opts.obj,\n\t\t\tevents = getEvents(opts.events),\n\t\t\tfunc = opts.func;\n\n\t\tvar callback = !opts.single ? func : function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tremoveListener(self, obj, opts.events, callback);\n\t\t};\n\n\t\t_.each(events, function(ev) {\n\t\t\tself._events.push({\n\t\t\t\tevents: ev,\n\t\t\t\tfunc: callback,\n\t\t\t\tobj: obj\n\t\t\t});\n\n\t\t\tif (obj instanceof jQuery) {\n\t\t\t\tobj[opts.single ? 'one' : 'on'](ev, callback);\n\t\t\t} else if (obj instanceof Struck.EventObject) {\n\t\t\t\tobj.com[opts.single ? 'once' : 'on'].call(obj.com, ev, callback, opts.context);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction removeListener(self, obj, events, func) {\n\t\tevents = getEvents(events);\n\n\t\tvar rejects = [],\n\t\t\tpasses = [];\n\n\t\tfunction pushResults(rejected, ev) {\n\t\t\tif (rejected) { \n\t\t\t\trejects.push(ev);\n\t\t\t} else { \n\t\t\t\tpasses.push(ev);\n\t\t\t}\n\t\t}\n\n\t\t_.each(self._events, function(ev) {\n\t\t\t_.each(events, function(name) {\n\t\t\t\tif (func) {\n\t\t\t\t\tpushResults(ev.obj === obj && ev.events === name && ev.func === func, ev);\n\t\t\t\t} else if (events) {\n\t\t\t\t\tpushResults(ev.obj === obj && ev.events === name, ev);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tif (obj && !events && !func) {\n\t\t\t_.each(self._events, function(ev) {\n\t\t\t\tpushResults(ev.obj === obj, ev);\n\t\t\t});\n\t\t} else if (!events) { \n\t\t\trejects = self._events; \n\t\t}\n\n\t\tself._events = passes;\n\n\t\t_.each(rejects, function(reject) {\n\t\t\tif (reject.obj instanceof jQuery) {\n\t\t\t\treject.obj.off(reject.events, reject.func);\n\t\t\t} else if (reject.obj instanceof Struck.EventObject) {\n\t\t\t\treject.obj.com.off(reject.events, rejects.func);\n\t\t\t}\n\t\t});\n\t}\n\n\t// #####listenTo\n\n\t// Registers a event listener to the\n\t// appropriate subsystem. Delegates jquery\n\t// objects to the jq event system and struck\n\t// objects to the instance's intercom\n\t// we then keep a secondary object of events\n\t// to remove when the object is deconstructed\n\tEventObject.prototype.listenTo = function (obj, events, func, context) {\n\t\tvar opts = _.chain(arguments).rest(4).first().value();\n\t\t\n\t\taddListener(this, { \n\t\t\tobj: obj,\n\t\t\tevents: events,\n\t\t\tfunc: func,\n\t\t\tsingle: firstDef(opts && opts.single, false), \n\t\t\tcontext: firstDef(context, this) \n\t\t});\n\n\t\treturn this;\n\t};\n\n\t// #####listenOnce\n\tEventObject.prototype.listenOnce = function (obj, events, func, context) {\n\t\treturn this.listenTo(obj, events, func, firstDef(context, this), { single: true });\n\t};\n\n\t// #####stopListening\n\t// removes an event listener from the\n\t// appropriate subsystem\n\tEventObject.prototype.stopListening = function (obj, events, func) {\n\t\tremoveListener(this, obj, events, func);\n\t\treturn this;\n\t};\n\n\tEventObject.prototype.trigger = function(events) {\n\t\tthis.com.emit.apply(this.com, [events].concat(_.rest(arguments, 1)));\n\t\treturn this;\n\t};\n\n\t// #####destroy\n\t// when an object is removed, the destroy function\n\t// should be called to remove attached event listeners\n\tEventObject.prototype.destroy = function () {\t\t\n\t\tStruck.BaseObject.prototype.destroy.apply(this, arguments);\n\n\t\t// remove all event listeners listeners\n\t\tthis.stopListening();\n\n\t\t_.defer(function(self) { \n\t\t\t// destroy com interface\n\t\t\tself.com.destroy();\n\t\t\tdelete self.com;\n\t\t}, this);\n\n\t\treturn this;\n\t};\n\n\treturn EventObject;\n})();\n","// ##Intercom\n\n// A standalone function for an event subscriber\n// system to be used in other modules\nStruck.Intercom = (function () {\n\t// setup default subscription object\n\t// used to clone and extend in `subscribe` function\n\tvar defaultSubscription = {\n\t\tsingle: false,\n\t\tname: 'all',\n\t\tcallback: _.noop,\n\t\tcontext: root\n\t};\n\n\t// get keys from default subscription object\n\t// useful for iteration and filtering\n\tvar subscriptionKeys = _.keys(defaultSubscription);\n\n\t// #####Constructor\n\t// set up default subscriptio object's context to the\n\t// intercom instance and create subscription collection\n\tvar Intercom = Struck.BaseObject.extend({\n\t\tbaseInitiation: function () {\n\t\t\tStruck.BaseObject.prototype.baseInitiation.apply(this, arguments);\n\t\t\tthis.defaultSubscription = _.extend({}, defaultSubscription, { context: this });\n\t\t\tthis.subscriptions = [];\n\t\t}\n\t});\n\n\n\t// #####subscriber\n\t// splits and delegates subscriptions from on/once calls\n\tfunction subscriber(com, names, func, opts) {\n\t\t_.each(splitName(com, names), function (name) {\n\t\t\tsubscribe(com, name, func, {\n\t\t\t\tsingle: opts.single,\n\t\t\t\tcontext: opts.context\n\t\t\t});\n\t\t});\n\t}\n\n\t// #####subscribe\n\t// build subscription object from\n\t// name and function, additional\n\t// options are optional...\n\tfunction subscribe(com, name, func, opts) {\n\t\tif (!name && !func) { return; }\n\n\t\tvar subOptions = {\n\t\t\tname: name,\n\t\t\tcallback: func\n\t\t};\n\n\t\t// add useful options to subOptions\n\t\t_.each(subscriptionKeys, function (key) {\n\t\t\tif (opts[key]) {\n\t\t\t\tsubOptions[key] = opts[key];\n\t\t\t}\n\t\t});\n\n\t\t// create a new subscription from the default object\n\t\t// and overwrite properties with subOptions,\n\t\t// then adds subscription to collection\n\t\tvar subscription = _.extend({}, defaultSubscription, subOptions);\n\t\tcom.subscriptions.push(subscription);\n\t}\n\n\tfunction unsubscriber(com, names, func) {\n\t\tif (names === undefined) {\n\t\t\tunsubscribe(com);\n\t\t\treturn;\n\t\t}\n\n\t\t_.each(splitName(com, names), function (name) {\n\t\t\tunsubscribe(com, name, func);\n\t\t});\n\t}\n\n\t// #####unsubscribe\n\t//\n\tfunction unsubscribe(com, name, func) {\n\t\tvar filter = function (sub) {\n\t\t\t// com, name, func:\n\t\t\t// .. remove specific subscriber function\n\t\t\tif (func) {\n\t\t\t\treturn sub.name === name && sub.callback === func;\n\n\t\t\t// com, name:\n\t\t\t// .. remove all subscribers by name\n\t\t\t} else if (name) {\n\t\t\t\treturn sub.name === name;\n\t\t\t}\n\n\t\t\t// remove all subscriptions if no arguments provided\n\t\t\treturn true;\n\t\t};\n\n\t\tcom.subscriptions = _.reject(com.subscriptions, filter);\n\t}\n\n\t// #####trigger\n\t//\n\tfunction trigger(com, sub, args) {\n\t\tsub.callback.apply(sub.context, args);\n\n\t\tif (sub.single) {\n\t\t\tunsubscribe(com, sub.name, sub.callback);\n\t\t}\n\t}\n\n\t// #####Intercom.on\n\tIntercom.prototype.on = function(names, callback, context, opts) {\n\t\tsubscriber(this, names, callback, { \n\t\t\tsingle: firstDef(opts && opts.single, false), \n\t\t\tcontext: context \n\t\t});\n\n\t\treturn this;\n\t};\n\n\t// #####Intercom.once\n\tIntercom.prototype.once = function(names, callback, context) {\n\t\treturn this.on(names, callback, context, { single: true });\n\t};\n\n\t// #####Intercom.off\n\tIntercom.prototype.off = function(names, callback) {\n\t\tunsubscriber(this, names, callback);\n\t\treturn this;\n\t};\n\n\t// #####Intercom.emit\n\tIntercom.prototype.emit = function (names) {\n\t\tvar args = _.rest(arguments, 1);\n\t\tvar filteredSubs = _.reduce(splitName(this, names), function (subs, name) {\n\t\t\tvar matches = _.filter(this.subscriptions, function (subscriber) {\n\t\t\t\treturn subscriber.name === name;\n\t\t\t}, this);\n\n\t\t\treturn subs.concat(matches);\n\t\t}, [], this);\n\n\t\tfilteredSubs = _.unique(filteredSubs);\n\n\t\t_.each(filteredSubs, function(sub) {\n\t\t\ttrigger(this, sub, args);\n\t\t}, this);\n\n\t\treturn this;\n\t};\n\n\treturn Intercom;\n})();\n","\treturn Struck;\n}));\n"],"sourceRoot":"/source/"}