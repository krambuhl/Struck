{"version":3,"file":"struck.min.js","sources":["_export.js","utilities.js","hook.js","extend.js","base-object.js","event-object.js","intercom.js","_after.js"],"names":[],"mappings":"CAAA,SAAA,EAAA,GACA,GAAA,kBAAA,SAAA,OAAA,IACA,QAAA,SAAA,SAAA,WAAA,SAAA,EAAA,EAAA,GACA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,SAEA,IAAA,mBAAA,SAAA,CACA,GAAA,GAAA,QAAA,UAAA,EAAA,QAAA,SACA,SAAA,EAAA,EAAA,QAAA,EAAA,OAEA,GAAA,OAAA,EAAA,KAAA,EAAA,EAAA,EAAA,SAEA,KAAA,SAAA,EAAA,EAAA,GCTA,QAAA,GAAA,GACA,MAAA,GAAA,OAAA,GAAA,cAAA,EAAA,MAAA,GAMA,QAAA,GAAA,EAAA,GAEA,GAAA,GAAA,EAAA,EAAA,EAIA,OAAA,GAAA,QAAA,GAAA,EAAA,GAAA,EAAA,MAAA,KAKA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,WAAA,GAAA,EAAA,MAAA,GAAA,EAGA,QAAA,KACA,MAAA,GAAA,KAAA,UAAA,SAAA,GACA,OAAA,EAAA,YAAA,KC1BA,MCyCA,GAAA,KAAA,WAQA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,IACA,EAAA,GAAA,KAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAIA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,UAAA,EAAA,EAAA,WAAA,GAAA,EAAA,GACA,GACA,KAAA,EACA,OAAA,EAAA,OAMA,OAAA,YACA,GACA,GADA,EAAA,EAAA,QAAA,WAGA,EAAA,EAAA,UAAA,GAAA,KAAA,GAgBA,OAdA,GAAA,KACA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,GAAA,OAAA,EAAA,OAGA,EAAA,WAAA,KACA,EAAA,EAAA,MAAA,KAAA,YAGA,EAAA,KAAA,EAAA,OAAA,GAEA,EAAA,MACA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,GAAA,OAAA,EAAA,QAGA,GA3CA,GAAA,IACA,OAAA,KACA,IAAA,SACA,KAAA,QACA,OAAA,OA2CA,OAAA,MCjFA,EAAA,OAAA,SAAA,EAAA,GACA,GACA,GADA,EAAA,IAOA,GADA,GAAA,EAAA,IAAA,EAAA,eACA,EAAA,YAEA,WAAA,MAAA,GAAA,MAAA,KAAA,YAIA,EAAA,OAAA,EAAA,EAAA,EAIA,IAAA,GAAA,WAAA,KAAA,YAAA,EAcA,OAbA,GAAA,UAAA,EAAA,UACA,EAAA,UAAA,GAAA,GAIA,GACA,EAAA,OAAA,EAAA,UAAA,GAKA,EAAA,UAAA,EAAA,UAEA,GCrCA,EAAA,WAAA,WAeA,QAAA,GAAA,GAGA,KAAA,iBAAA,GACA,KAAA,aAwCA,QAAA,GAAA,EAAA,GACA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAEA,MADA,GAAA,GAAA,EAAA,IAAA,GACA,OAuCA,MA7EA,GAAA,UAAA,iBAAA,EAAA,KAAA,mBAAA,SAAA,GAOA,MALA,MAAA,IAAA,EAAA,SAAA,OAGA,KAAA,QAAA,EAAA,UAAA,GAEA,OAMA,EAAA,UAAA,WAAA,EAAA,KAAA,aAAA,EAAA,MAKA,EAAA,UAAA,QAAA,EAAA,KAAA,UAAA,EAAA,MAKA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,YAAA,GAAA,EAAA,KAAA,WAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,EAAA,MACA,EAAA,EAAA,EAAA,EAEA,OAAA,MAAA,GACA,KAAA,GAAA,MAAA,KAAA,GAGA,MAWA,EAAA,UAAA,IAAA,EAAA,KAAA,MAAA,SAAA,GACA,GAAA,GAAA,EAAA,QAAA,UACA,OAAA,GAAA,QAAA,GACA,EAAA,KAAA,GACA,EAAA,OAAA,EACA,EAAA,KAAA,GAEA,EAAA,KAAA,GAAA,QAIA,EAAA,UAAA,IAAA,EAAA,KAAA,MAAA,SAAA,EAAA,GASA,MARA,GAAA,EAAA,GACA,EAAA,SAAA,IACA,EAAA,KAAA,EAAA,SAAA,EAAA,GACA,KAAA,IAAA,EAAA,IACA,MAEA,KAAA,GAAA,EAAA,EAAA,MAEA,OAGA,EAAA,OAAA,EAAA,OAKA,EAAA,OAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,YAAA,GAAA,KAAA,KAAA,OAAA,EACA,OAAA,IAAA,GAAA,EAAA,UAAA,KAIA,KClGA,EAAA,YAAA,WACA,YA4FA,SAAA,GAAA,EAAA,GACA,GAAA,GAAA,EAAA,IACA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,KAEA,EAAA,EAAA,OAAA,WACA,EAAA,MAAA,KAAA,WACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAFA,CAKA,GAAA,KAAA,EAAA,SAAA,GACA,EAAA,eAAA,MACA,OAAA,EACA,KAAA,EACA,IAAA,IAGA,YAAA,QACA,EAAA,EAAA,OAAA,MAAA,MAAA,GAAA,KAAA,EAAA,SAAA,GACA,YAAA,GAAA,aACA,EAAA,IAAA,EAAA,OAAA,OAAA,MAAA,KAAA,EAAA,IAAA,EAAA,EAAA,EAAA,WAKA,QAAA,GAAA,EAAA,EAAA,EAAA,GAMA,QAAA,GAAA,EAAA,GACA,EACA,EAAA,KAAA,GAEA,EAAA,KAAA,GATA,EAAA,EAAA,EAEA,IAAA,MACA,IAUA,GAAA,KAAA,EAAA,eAAA,SAAA,GACA,EAAA,KAAA,EAAA,SAAA,GACA,EACA,EAAA,EAAA,MAAA,GAAA,EAAA,SAAA,GAAA,EAAA,OAAA,EAAA,GACA,GACA,EAAA,EAAA,MAAA,GAAA,EAAA,SAAA,EAAA,OAKA,GAAA,IAAA,EAIA,IACA,EAAA,EAAA,gBAJA,EAAA,KAAA,EAAA,eAAA,SAAA,GACA,EAAA,EAAA,MAAA,EAAA,KAMA,EAAA,eAAA,EAEA,EAAA,KAAA,EAAA,SAAA,GACA,EAAA,cAAA,QACA,EAAA,IAAA,IAAA,EAAA,OAAA,EAAA,MACA,EAAA,cAAA,GAAA,aACA,EAAA,IAAA,IAAA,IAAA,EAAA,OAAA,EAAA,QAzJA,GAAA,GAAA,EAAA,WAAA,QAgKA,OA9JA,GAAA,UAAA,iBAAA,WAWA,MARA,MAAA,IAAA,EAAA,SAAA,SAIA,EAAA,WAAA,UAAA,iBAAA,MAAA,KAAA,WAEA,KAAA,kBAEA,MAMA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GACA,GAAA,GAAA,EASA,OAPA,UAAA,GAAA,OAAA,IACA,EAAA,IAAA,GAGA,EAAA,WAAA,UAAA,KAAA,MAAA,KAAA,WACA,KAAA,IAAA,KAAA,MAAA,KAAA,KAAA,EAAA,GAAA,OAAA,IAEA,MAWA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,MAAA,WAAA,KAAA,GAAA,QAAA,OAUA,OARA,GAAA,MACA,IAAA,EACA,OAAA,EACA,KAAA,EACA,OAAA,EAAA,GAAA,EAAA,QAAA,GACA,QAAA,EAAA,EAAA,QAGA,MAIA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GACA,MAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,OAAA,QAAA,KAMA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAEA,MADA,GAAA,KAAA,EAAA,EAAA,GACA,MAGA,EAAA,UAAA,QAAA,SAAA,GAEA,MADA,MAAA,IAAA,KAAA,MAAA,KAAA,KAAA,GAAA,OAAA,EAAA,KAAA,UAAA,KACA,MAMA,EAAA,UAAA,QAAA,WAWA,MAVA,GAAA,WAAA,UAAA,QAAA,MAAA,KAAA,WAGA,KAAA,gBAEA,EAAA,MAAA,SAAA,GAEA,EAAA,IAAA,WACA,MAEA,MA0EA,KCrKA,EAAA,SAAA,WAwEA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,GAAA,SAAA,GACA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,OACA,QAAA,EAAA,YASA,QAAA,GAAA,EAAA,EAAA,EAAA,GACA,GAAA,GAAA,EAAA,CAEA,GAAA,IACA,KAAA,EACA,SAAA,EAIA,GAAA,KAAA,EAAA,SAAA,GACA,EAAA,KACA,EAAA,GAAA,EAAA,KAOA,IAAA,GAAA,EAAA,UAAA,EAAA,EACA,GAAA,cAAA,KAAA,IAGA,QAAA,GAAA,EAAA,EAAA,GACA,MAAA,UAAA,MACA,GAAA,OAIA,GAAA,KAAA,EAAA,EAAA,GAAA,SAAA,GACA,EAAA,EAAA,EAAA,KAMA,QAAA,GAAA,EAAA,EAAA,GACA,GAAA,GAAA,SAAA,GAGA,MAAA,GACA,EAAA,OAAA,GAAA,EAAA,WAAA,EAIA,EACA,EAAA,OAAA,GAIA,EAGA,GAAA,cAAA,EAAA,OAAA,EAAA,cAAA,GAKA,QAAA,GAAA,EAAA,EAAA,GACA,EAAA,SAAA,MAAA,EAAA,QAAA,GAEA,EAAA,QACA,EAAA,EAAA,EAAA,KAAA,EAAA,UA/IA,GAAA,IACA,QAAA,EACA,KAAA,MACA,SAAA,EAAA,KACA,QAAA,GAKA,EAAA,EAAA,KAAA,GAKA,EAAA,EAAA,WAAA,QAqIA,OAnIA,GAAA,UAAA,iBAAA,WAKA,MAJA,GAAA,WAAA,UAAA,iBAAA,MAAA,KAAA,WACA,KAAA,oBAAA,EAAA,UAAA,GAAA,QAAA,OACA,KAAA,iBAEA,MAIA,EAAA,UAAA,GAAA,SAAA,EAAA,EAAA,EAAA,GAMA,MALA,GAAA,KAAA,EAAA,GACA,OAAA,EAAA,GAAA,EAAA,QAAA,GACA,QAAA,IAGA,MAIA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,GACA,MAAA,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,KAIA,EAAA,UAAA,IAAA,SAAA,EAAA,GAEA,MADA,GAAA,KAAA,EAAA,GACA,MAIA,EAAA,UAAA,KAAA,SAAA,GACA,GAAA,GAAA,EAAA,KAAA,UAAA,GACA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,SAAA,EAAA,GACA,GAAA,GAAA,EAAA,OAAA,KAAA,cAAA,SAAA,GACA,MAAA,GAAA,OAAA,GACA,KAEA,OAAA,GAAA,OAAA,OACA,KAQA,OANA,GAAA,EAAA,OAAA,GAEA,EAAA,KAAA,EAAA,SAAA,GACA,EAAA,KAAA,EAAA,IACA,MAEA,MAqFA,KL1JA","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['lodash', 'jquery', 'exports'], function(_, $, exports) {\n      root.Struck = factory(root, exports, _, $);\n    });\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('lodash'), $ = require('jquery');\n    exports = factory(root, exports, _, $);\n  } else {\n    root.Struck = factory(root, {}, root._, root.jQuery);\n  }\n}(this, function(root, Struck, _, $) {","// ###Utilities\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n// #####splitName\n// split \"event1 event2\" into an\n// array of event names\nfunction splitName(names, context) {\n  // get result of name if defined as a function\n  var events = result(names, context);\n\n  // split by spaces if result isn't an array\n  // always returns an array\n  return _.isArray(events) ? events : events && events.split(' ');\n}\n\n// #####result\n// returns get result of an expression\nfunction result(expr, context) {\n  return _.isFunction(expr) ? expr.apply(context) : expr;\n}\n\nfunction firstDef() {\n  return _.find(arguments, function(arg) { \n    return !_.isUndefined(arg);\n  });\n}","// ##Hook\n\n// wraps function calls with hook logic,\n// used to wrap method calls in an Struck\n// Object.  The object's hook function will be\n// called before and after the function call\n// by default \n\n// __Example:__\n// ```javascript\n// var HookedObj = Struck.EventObject.extend({\n//   initialize: function () {\n//\n//     this.com.on('beforeSayHello', function() {\n//       console.log('open mouth');\n//     });\n//   },\n//\n//   sayHello: Struck.hook(function () {\n//     console.log('say hello');\n//   })\n// })\n//\n// var myHookedObject = HookedObj.create({\n//   onSayHello: function() {\n///    console.log('hello complete);\n//   },\n//   afterSayHello: function () {\n//     console.log('close mouth');\n//   }\n// });\n//\n// myHookedObject.sayHello();\n//\n// output:\n//   - open mouth\n//   - say hello\n//   - hello complete\n//   - close mouth\n// ```\n\nStruck.hook = (function () {\n  var defaults = {\n    prefix: 'on',\n    pre: 'before',\n    post: 'after',\n    method: 'hook'\n  };\n\n  function fire(self, method, opts) {\n    if (self[method]) {\n      self[method].call(self, opts.name, opts.prefix, opts.args);\n    }\n  }\n\n  function Hook(name, func, opts) {\n    var options = _.extend({}, defaults, !_.isFunction(func) ? func : opts);\n    var fireDefaults = {\n      name: name,\n      prefix: options.prefix\n    };\n\n    // define function to called as a method of\n    // Struck Object, the `this` context is assumed\n    // to refer to the struck object.\n    return function() {\n      var args = _.toArray(arguments),\n        result;\n\n      var fireOptions = _.extend({}, fireDefaults, { args: args });\n\n      if (options.pre) {\n        fire(this, options.method, _.extend({}, fireOptions, { prefix: options.pre }));\n      }\n\n      if (_.isFunction(func)) {\n        result = func.apply(this, arguments);\n      }\n\n      fire(this, options.method, fireOptions);\n\n      if (options.post) {\n        _.defer(fire, this, options.method, _.extend({}, fireOptions, { prefix: options.post }));\n      }\n\n      return result;\n    };\n  }\n\n  return Hook;\n})();\n","// ###Extend\n\n// _Pulled from Backbone.js 1.1.2 source_\n//\n// Helper function to correctly set up the prototype chain,\n// for subclasses. Similar to goog.inherits, but uses a hash\n// of prototype properties and class properties to be extended.\n\nStruck.extend = function(protoProps, staticProps) {\n  var parent = this;\n  var child;\n\n  // The constructor function for the new subclass is either defined\n  // by you (the \"constructor\" property in your extend definition),\n  // or defaulted by us to simply call the parent's constructor.\n  if (protoProps && _.has(protoProps, 'constructor')) {\n    child = protoProps.constructor;\n  } else {\n    child = function() { return parent.apply(this, arguments); };\n  }\n\n  // Add static properties to the constructor function, if supplied.\n  _.extend(child, parent, staticProps);\n\n  // Set the prototype chain to inherit from parent,\n  // without calling parent's constructor function.\n  var Surrogate = function() { this.constructor = child; };\n  Surrogate.prototype = parent.prototype;\n  child.prototype = new Surrogate();\n\n  // Add prototype properties (instance properties)\n  // to the subclass, if supplied.\n  if (protoProps) {\n    _.extend(child.prototype, protoProps);\n  }\n\n  // Set a convenience property in case the\n  // parent's prototype is needed later.\n  child.__super__ = parent.prototype;\n\n  return child;\n};\n","// ##BaseObject\n\n// function for enabling common architectures\nStruck.BaseObject = (function () {\n\n  // ####BaseObject Constructor\n\n  // constructor is run when object is created\n  // runs base initiation by default\n\n  // __Warning: overwriting the BaseObject\n  // Constructor will disable internal processes.__\n  // In cases where overwriting the constructor\n  // is required call the prototype to preserve\n  // functionality:\n\n  // `Struck.BaseObject.prototype.constructor.apply(this, arguments);`\n\n  function BaseObject(options) {\n    // run base initiation and provide\n    // hooks that extended objects can use\n    this.initializeObject(options);\n    this.initialize();\n  }\n\n  // #####initializeObject\n  // when the object is created\n  BaseObject.prototype.initializeObject = Struck.hook('initializeObject', function(options) {\n    // assign UID to view object\n    this.uid = _.uniqueId('uid');\n\n    // add options object to instance\n    this.options = _.extend({}, options);\n\n    return this;\n  });\n\n  // #####initialize\n  // overwritable function that gets called\n  // when constructing new objects\n  BaseObject.prototype.initialize = Struck.hook('initialize', _.noop);\n\n  // #####destroy\n  // overwritable function that gets called\n  // when destroying object\n  BaseObject.prototype.destroy = Struck.hook('destroy', _.noop);\n\n  // #####hook\n  // interface for providing method callbacks\n  // like `onRender`\n  BaseObject.prototype.hook = function(name, mod) {\n    var args = _.isUndefined(mod) ? _.rest(arguments) : _.rest(arguments, 2),\n      prefix = firstDef(mod, 'on'),\n      methodHook = prefix + capitalize(name);\n\n    if (this[methodHook]) {\n      return this[methodHook].apply(this, args);\n    }\n\n    return this;\n  };\n\n  function reduceProps(self, props) {\n    return _.reduce(props, function(memo, prop) {\n      memo[prop] = self.get(prop);\n      return memo;\n    }, {});\n  }\n\n  // #####get\n  BaseObject.prototype.get = Struck.hook('get', function(prop) {\n    var args = _.toArray(arguments);\n    if (_.isArray(prop)) {\n      return reduceProps(this, prop);\n    } else if (args.length > 1) {\n      return reduceProps(this, args);\n    }\n    return result(this[prop], this);\n  });\n\n  // #####set\n  BaseObject.prototype.set = Struck.hook('set', function(prop, val) {\n    prop = result(prop);\n    if (_.isObject(prop)) {\n      _.each(prop, function(value, property) {\n        this.set(property, value);\n      }, this);\n    }\n    this[prop] = result(val, this);\n\n    return this;\n  });\n\n  BaseObject.extend = Struck.extend;\n\n  // ###create\n  // prefered method of creating new objects\n  // over using the `new` style\n  BaseObject.create = function(props, opts) {\n    var Creator = (!_.isUndefined(props)) ? this.extend(props) : this;\n    return new Creator(_.extend({}, opts));\n  };\n\n\n  return BaseObject;\n})();\n","// ##EventObject\n\n// `Struck.EventObject` normalizes an event API\n// for adding event listeners and listening to\n// objects externally.  Using the listen methods\n// automates undelgating events of view removal.\nStruck.EventObject = (function () {\n  'use strict';\n\n  var EventObject = Struck.BaseObject.extend();\n\n  EventObject.prototype.initializeObject = function () {\n    // all event objects need an intercom for\n    // emiting and listening to events\n    this.com = Struck.Intercom.create();\n\n    // call super after defining com which\n    // is used for base hooks\n    Struck.BaseObject.prototype.initializeObject.apply(this, arguments);\n\n    this.listenedEvents = [];\n\n    return this;\n  };\n\n  // #####hook\n\n  // trigger intercom events for hook\n  EventObject.prototype.hook = function (name, mod, args) {\n    var postfix = '';\n    \n    if (mod !== undefined && mod !== 'on') {\n      postfix = ':' + mod;\n    }\n\n    Struck.BaseObject.prototype.hook.apply(this, arguments);\n    this.com.emit.apply(this.com, [name + postfix].concat(args));\n\n    return this;\n  };\n\n  // #####listenTo\n\n  // Registers a event listener to the\n  // appropriate subsystem. Delegates jquery\n  // objects to the jq event system and struck\n  // objects to the instance's intercom\n  // we then keep a secondary object of events\n  // to remove when the object is deconstructed\n  EventObject.prototype.listenTo = function (obj, events, func, context) {\n    var opts = _.chain(arguments).rest(4).first().value();\n\n    addListener(this, { \n      obj: obj,\n      events: events,\n      func: func,\n      single: firstDef(opts && opts.single, false), \n      context: firstDef(context, this) \n    });\n\n    return this;\n  };\n\n  // #####listenOnce\n  EventObject.prototype.listenOnce = function (obj, events, func, context) {\n    return this.listenTo(obj, events, func, firstDef(context, this), { single: true });\n  };\n\n  // #####stopListening\n  // removes an event listener from the\n  // appropriate subsystem\n  EventObject.prototype.stopListening = function (obj, events, func) {\n    removeListener(this, obj, events, func);\n    return this;\n  };\n\n  EventObject.prototype.trigger = function(events) {\n    this.com.emit.apply(this.com, [events].concat(_.rest(arguments, 1)));\n    return this;\n  };\n\n  // #####destroy\n  // when an object is removed, the destroy function\n  // should be called to remove attached event listeners\n  EventObject.prototype.destroy = function () {   \n    Struck.BaseObject.prototype.destroy.apply(this, arguments);\n\n    // remove all event listeners listeners\n    this.stopListening();\n\n    _.defer(function(self) { \n      // destroy com interface\n      self.com.destroy();\n    }, this);\n\n    return this;\n  };\n  \n  \n  function addListener(self, opts) {\n    var obj = opts.obj,\n      events = splitName(opts.events),\n      func = opts.func;\n\n    var callback = !opts.single ? func : function() {\n      func.apply(this, arguments);\n      removeListener(self, obj, opts.events, callback);\n    };\n\n    _.each(events, function(ev) {\n      self.listenedEvents.push({\n        events: ev,\n        func: callback,\n        obj: obj\n      });\n\n      if (obj instanceof jQuery) {\n        obj[opts.single ? 'one' : 'on'](ev, { self: opts.context }, callback);\n      } else if (obj instanceof Struck.EventObject) {\n        obj.com[opts.single ? 'once' : 'on'].call(obj.com, ev, callback, opts.context);\n      }\n    });\n  }\n\n  function removeListener(self, obj, events, func) {\n    events = splitName(events);\n\n    var rejects = [],\n      passes = [];\n\n    function pushResults(rejected, ev) {\n      if (rejected) { \n        rejects.push(ev);\n      } else { \n        passes.push(ev);\n      }\n    }\n\n    _.each(self.listenedEvents, function(ev) {\n      _.each(events, function(name) {\n        if (func) {\n          pushResults(ev.obj === obj && ev.events === name && ev.func === func, ev);\n        } else if (events) {\n          pushResults(ev.obj === obj && ev.events === name, ev);\n        }\n      });\n    });\n\n    if (!events && !func && obj) {\n      _.each(self.listenedEvents, function(ev) {\n        pushResults(ev.obj === obj, ev);\n      });\n    } else if (!events) { \n      rejects = self.listenedEvents; \n    }\n\n    self.listenedEvents = passes;\n\n    _.each(rejects, function(reject) {\n      if (reject.obj instanceof jQuery) {\n        reject.obj.off(reject.events, reject.func);\n      } else if (reject.obj instanceof Struck.EventObject) {\n        reject.obj.com.off(reject.events, rejects.func);\n      }\n    });\n  }\n\n\n\n  return EventObject;\n})();\n","// ##Intercom\n\n// A standalone function for an event subscriber\n// system to be used in other modules\nStruck.Intercom = (function () {\n  // setup default subscription object\n  // used to clone and extend in `subscribe` function\n  var defaultSubscription = {\n    single: false,\n    name: 'all',\n    callback: _.noop,\n    context: root\n  };\n\n  // get keys from default subscription object\n  // useful for iteration and filtering\n  var subscriptionKeys = _.keys(defaultSubscription);\n\n  // #####Constructor\n  // set up default subscriptio object's context to the\n  // intercom instance and create subscription collection\n  var Intercom = Struck.BaseObject.extend();\n\n  Intercom.prototype.initializeObject = function () {\n    Struck.BaseObject.prototype.initializeObject.apply(this, arguments);\n    this.defaultSubscription = _.extend({}, defaultSubscription, { context: this });\n    this.subscriptions = [];\n\n    return this;\n  };\n\n  // #####Intercom.on\n  Intercom.prototype.on = function(names, callback, context, opts) {\n    subscriber(this, names, callback, { \n      single: firstDef(opts && opts.single, false), \n      context: context \n    });\n\n    return this;\n  };\n\n  // #####Intercom.once\n  Intercom.prototype.once = function(names, callback, context) {\n    return this.on(names, callback, context, { single: true });\n  };\n\n  // #####Intercom.off\n  Intercom.prototype.off = function(names, callback) {\n    unsubscriber(this, names, callback);\n    return this;\n  };\n\n  // #####Intercom.emit\n  Intercom.prototype.emit = function (names) {\n    var args = _.rest(arguments, 1);\n    var filteredSubs = _.reduce(splitName(names, this), function (subs, name) {\n      var matches = _.filter(this.subscriptions, function (subscriber) {\n        return subscriber.name === name;\n      }, this);\n\n      return subs.concat(matches);\n    }, [], this);\n\n    filteredSubs = _.unique(filteredSubs);\n\n    _.each(filteredSubs, function(sub) {\n      trigger(this, sub, args);\n    }, this);\n\n    return this;\n  };\n\n  // ###Private Functions\n\n  // #####subscriber\n  // splits and delegates subscriptions from on/once calls\n  function subscriber(com, names, func, opts) {\n    _.each(splitName(names, com), function (name) {\n      subscribe(com, name, func, {\n        single: opts.single,\n        context: opts.context\n      });\n    });\n  }\n\n  // #####subscribe\n  // build subscription object from\n  // name and function, additional\n  // options are optional...\n  function subscribe(com, name, func, opts) {\n    if (!name && !func) { return; }\n\n    var subOptions = {\n      name: name,\n      callback: func\n    };\n\n    // add useful options to subOptions\n    _.each(subscriptionKeys, function (key) {\n      if (opts[key]) {\n        subOptions[key] = opts[key];\n      }\n    });\n\n    // create a new subscription from the default object\n    // and overwrite properties with subOptions,\n    // then adds subscription to collection\n    var subscription = _.extend({}, defaultSubscription, subOptions);\n    com.subscriptions.push(subscription);\n  }\n\n  function unsubscriber(com, names, func) {\n    if (names === undefined) {\n      unsubscribe(com);\n      return;\n    }\n\n    _.each(splitName(names, com), function (name) {\n      unsubscribe(com, name, func);\n    });\n  }\n\n  // #####unsubscribe\n  //\n  function unsubscribe(com, name, func) {\n    var filter = function (sub) {\n      // com, name, func:\n      // .. remove specific subscriber function\n      if (func) {\n        return sub.name === name && sub.callback === func;\n\n      // com, name:\n      // .. remove all subscribers by name\n      } else if (name) {\n        return sub.name === name;\n      }\n\n      // remove all subscriptions if no arguments provided\n      return true;\n    };\n\n    com.subscriptions = _.reject(com.subscriptions, filter);\n  }\n\n  // #####trigger\n  //\n  function trigger(com, sub, args) {\n    sub.callback.apply(sub.context, args);\n\n    if (sub.single) {\n      unsubscribe(com, sub.name, sub.callback);\n    }\n  }\n\n  return Intercom;\n})();\n","  return Struck;\n}));\n"],"sourceRoot":"/source/"}